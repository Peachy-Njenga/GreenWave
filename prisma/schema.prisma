// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id           String    @id
  username     String    @unique
  displayName  String
  email        String?   @unique
  passwordHash String?
  googleId     String?   @unique
  avatarUrl    String?
  bio          String?
  sessions      Session[]

  createdAt DateTime @default(now())

  // tables are named with upperase in prisma but lowercase in mysql so map is like an alias?
  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  // on delete cascase so that when a user is deleted the session can also go 
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}
